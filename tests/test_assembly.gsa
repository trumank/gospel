global test_global = 5;
extern global external_global;

constant assembly_version = 1;

hidden function __define_opaque_base_type base_layout: TypeLayout size_and_alignment: Integer -> TypeLayout {
    LoadSlot base_layout;
    LoadSlot size_and_alignment;
    TypeLayoutAlign;
    LoadSlot size_and_alignment;
    TypeLayoutPad;
    TypeLayoutFinalize;
    ReturnValue;
};

function usize -> TypeLayout {
    LoadSlot &platform AddressSize;
    TypeLayoutAllocate "usize";
    LoadSlot &function __define_opaque_base_type;
    Call 2;
    ReturnValue;
};

function u32 -> TypeLayout {
    IntConstant 0x4;
    TypeLayoutAllocate "u32";
    LoadSlot &function __define_opaque_base_type;
    Call 2;
    ReturnValue;
};

constant uint32_t = lazy u32 -> TypeLayout;
constant lazy_global = global test_global;

function ForwarderType forward: TypeLayout = constant uint32_t -> TypeLayout -> TypeLayout {
    LoadSlot forward;
    ReturnValue;
};

function SimpleStruct -> TypeLayout {
    TypeLayoutAllocate "SimpleStruct";
    LoadSlot &function u32;
    Call 0;
    TypeLayoutDefineMember "test_member_u32";
    LoadSlot &function usize;
    Call 0;
    TypeLayoutDefineMember "test_member_usize";
    TypeLayoutFinalize;
    ReturnValue;
};

function ChildStruct -> TypeLayout {
    TypeLayoutAllocate "ChildStruct";
    LoadSlot &function SimpleStruct;
    Call 0;
    TypeLayoutDefineBaseClass;
    LoadSlot &function u32;
    Call 0;
    TypeLayoutDefineMember "child_member";
    TypeLayoutFinalize;
    ReturnValue;
};

function InvokerType invoke: FunctionPointer -> TypeLayout {
    LoadSlot invoke;
    Call 0;
    ReturnValue;
};

function StaticArrayType array_size: Integer -> TypeLayout {
    TypeLayoutAllocate "StaticArrayType";
    LoadSlot &function u32;
    Call 0;
    LoadSlot array_size;
    TypeLayoutDefineArrayMember "data";
    TypeLayoutFinalize;
    ReturnValue;
};
