global test_global = 5;

function InvokerType max_slots 0 {
    LoadArgumentValue 0;
    Call 0;
    SetReturnValue;
};

function ClosureCallFunction max_slots 0 {
    LoadArgumentValue 0;
    LoadArgumentValue 1;
    Add 0x82u32;
    SetReturnValue;
};

function ClosureTest max_slots 1 {
    LoadFunctionClosure function ClosureCallFunction;
    Int32Constant 5;
    BindClosure 1;
    StoreSlot 0;
    Int32Constant 7;
    LoadSlot 0;
    Call 1;
    SetReturnValue;
};

function ArrayTest max_slots 0 {
    ArrayAllocate;
    Int32Constant 3;
    ArrayReserve;
    Int32Constant 15;
    ArrayPushItem;
    Int32Constant 0;
    Int32Constant 10;
    ArrayInsertItem;
    Dup;
    Dup;
    ArrayGetLength;
    Int32Constant 1;
    Sub 0x82u32;
    ArrayGetItem;
    Int32Constant 1;
    Add 0x82u32;
    ArrayPushItem;
    SetReturnValue;
};

function AbortTest max_slots 0 {
    RaiseException "abort test";
};

function ExceptionHandlerTest max_slots 0 {
    Int32Constant 5;
    PushExceptionHandler A;
    Pop;
    Int32Constant 2;
    LoadArgumentValue 0;
    Int32Constant 1;
    CmpEq 0x82u32;
    Branchz 0x82u32 B;
    RaiseException "Value of 1 is bad";
B:  PopExceptionHandler;
    Branch C;
A:  Int32Constant 1;
    Sub 0x82u32;
C:  SetReturnValue;
};

function ProblematicType;

function AffectedType max_slots 1 {
    TypeUDTAllocate "AffectedType" "Struct";
    StoreSlot 0;
    LoadSlot 0;
    LoadFunctionClosure function test_assembly::ProblematicType;
    Call 0;
    Int32Constant -1;
    TypeUDTAddField "dependent_field" 0;
    LoadSlot 0;
    TypeFinalize;
    LoadSlot 0;
    SetReturnValue;
};

function ProblematicType max_slots 1 {
    TypeUDTAllocate "ProblematicType" "Struct";
    StoreSlot 0;
    LoadSlot 0;
    SetReturnValue;
    LoadSlot 0;
    LoadFunctionClosure function test_assembly::AffectedType;
    Call 0;
    TypePointerCreate;
    Int64Constant -1i64;
    TypeUDTAddField "pointer_field" 0;
    RaiseException "Exception before ProblematicType is finalized";
    LoadSlot 0;
    TypeFinalize;
};

function VMFunctionCallConsistencyBug max_slots 1 {
    PushExceptionHandler A;
    LoadFunctionClosure function test_assembly::ProblematicType;
    Call 0;
    Pop;
    PopExceptionHandler;
A:  LoadFunctionClosure function test_assembly::AffectedType;
    Call 0;
    SetReturnValue;
};

global UE_VERSION = 504u64;

function ArithmeticTest max_slots 1 {
    LoadGlobalVariable "UE_VERSION";
    Int32Constant 0x198u32;
    CmpLess 0x82u32;
    Branchz 0x82u32 A;
    Int32Constant 55u32;
    Branch B;
A:  Int32Constant 57u32;
B:  SetReturnValue;
};
